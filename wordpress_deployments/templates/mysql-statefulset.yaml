apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-db
  namespace: {{ CLIENT_NAMESPACE }} # Placeholder for client namespace (e.g., 'client-a')
spec:
  serviceName: mysql-db
  replicas: 1
  selector:
    matchLabels:
      app: mysql-db
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        env:
        # DB Name is pulled from the ConfigMap, which will be in the same namespace
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: wordpress-config
              key: WORDPRESS_DB_NAME
        # DB User is pulled from the ConfigMap
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: wordpress-config
              key: WORDPRESS_DB_USER
        # Root password is pulled from the Secret
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wordpress-secret
              key: MYSQL_ROOT_PASSWORD
        # FIX: The MYSQL_PASSWORD is required to create the non-root user (WORDPRESS_DB_USER)
        # with the correct password at startup.
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wordpress-secret
              key: WORDPRESS_DB_PASSWORD
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: mysql-data
      namespace: {{ CLIENT_NAMESPACE }} # Placeholder for client namespace
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: local-path
      resources:
        requests:
          storage: 3Gi
